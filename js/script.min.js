'use strict';
var components = window.components = {};

components.fontFamily = {
    selector: 'html',
    styles: ['https://fonts.googleapis.com/css2?family=Prompt:wght@200;300;400;500;600;700;800;900&display=swap','https://fonts.googleapis.com/css?family=Material+Icons|Material+Icons+Outlined|Material+Icons+Two+Tone|Material+Icons+Round|Material+Icons+Sharp']
};


components.body = {
    selector: 'body',
    script: ['./js/bootstrap.bundle.min.js','./js/jarallax.min.js','./js/functions.js']
};




components.icofont = {
    selector: '[class*="icofont-"]',
    styles: './css/icofont.css'
};



components.header = {
    selector: 'header',
    styles: './css/header.css'
};





components.nav = {
    selector: 'nav',
    styles: ['./css/coreNavigation.css', './css/typography.css', './css/custom.css'],
    script:  './js/coreNavigation.js',
    init: function init(nodes) {
        $('nav').coreNavigation({
            menuPosition: "center",
            container: true,
            responsideSlide: true, // true or false
            mode: 'sticky',
            onStartSticky: function () {
                console.log('Start Sticky');
            },
            onEndSticky: function () {
                console.log('End Sticky');
            },
            ddropdownEvent: 'hover',
            onOpenDropdown: function(){
                console.log('open');
            },
            onCloseDropdown: function(){
                console.log('close');
            }
        });
    }
};


components.qa_box = {
    selector: '.qa-box',
    styles: './css/qa-box.css',
    script: './js/qa-box.js'
};






components.bootstrap_touch_slider = {
    selector: '#bootstrap-touch-slider',
    styles: ['./css/animate.css','./css/carousel.css','./css/bootstrap-touch-slider.css'],
    script: ['./js/carousel.js', './js/jquery.touchSwipe.min.js', './js/bootstrap-touch-slider.js'],
    init: function init(nodes) {
        $('#bootstrap-touch-slider').bsTouchSlider();
    }
};







components.banner_index = {
    selector: '.banner_index',
    styles: ['./css/slick.min.css','./css/slick-custom.css'],
    script:  './js/slick.min.js',
    init: function init(nodes) {
        $('.banner_index').slick({
          slidesToShow: 1,
          slidesToScroll: 1,
          arrows: false,
          dots: true,
          autoplay: true,
          // fade: true,
          autoplaySpeed: 3000,
      });
    }
};



components.navigator = {
    selector: '.bg-navigator',
    styles: './css/navigator.css'
};




components.service_section = {
    selector: '#service-section',
    styles: './css/service.css'
};


components.testimonial = {
    selector: '#testimonial-section',
    styles: './css/testimonial.css'
};




components.book_section = {
    selector: '#book-section',
    styles: './css/book.css'
};
components.about_section = {
    selector: '#about-section',
    styles: './css/about.css'
};

components.service_slick = {
    selector: '.service_slick',
    styles: ['./css/slick.min.css','./css/slick-custom.css'],
    script:  './js/slick.min.js',
    init: function init(nodes) {
        $('.service_slick').slick({
          slidesToShow: 4,
          slidesToScroll: 1,
          arrows: true,
          autoplay: true,
          rows: 1,
          autoplaySpeed: 5000,
          responsive: [{
            breakpoint: 992,
            settings: {
                slidesToShow: 2,
                slidesToScroll: 1,
                rows: 1,
                infinite: true
            }
        },

        {
            breakpoint: 768,
            settings: {
                arrows: true,
                dots: false,
                autoplay: false,
                rows: 1,
                slidesToShow: 1,
                slidesToScroll: 1
            }
        }
                    // You can unslick at a given breakpoint now by adding:
                    // settings: "unslick"
                    // instead of a settings object
        ]

      });
    }
};




components.service_section = {
    selector: '#service-section',
    styles: './css/service.css'
};

components.blog_section = {
    selector: '#new-section',
    styles: './css/new.css'
};



components.logo_c_slick = {
    selector: '.logo_c_slick',
    styles: ['./css/slick.min.css','./css/slick-custom.css'],
    script:  './js/slick.min.js',
    init: function init(nodes) {
        $('.logo_c_slick').slick({
          slidesToShow: 8,
          slidesToScroll: 1,
          arrows: false,
          autoplay: true,
          rows: 1,
          autoplaySpeed: 3000,
          responsive: [{
            breakpoint: 992,
            settings: {
                slidesToShow: 4,
                slidesToScroll: 1,
                rows: 1,
                infinite: true
            }
        },

        {
            breakpoint: 768,
            settings: {
                arrows: false,
                dots: false,
                autoplay: false,
                rows: 1,
                slidesToShow: 3,
                slidesToScroll: 1
            }
        }
                    // You can unslick at a given breakpoint now by adding:
                    // settings: "unslick"
                    // instead of a settings object
        ]

      });
    }
};
components.warehouse_slick = {
    selector: '.warehouse_slick',
    styles: ['./css/slick.min.css','./css/slick-custom.css'],
    script:  './js/slick.min.js',
    init: function init(nodes) {

        $('.warehouse_slick').slick({
           slidesToShow: 3,
           slidesToScroll: 1,
           arrows: false,
           dots: true,
           autoplay: false,
           autoplaySpeed: 3000,
           responsive: [{
            breakpoint: 992,
            settings: {
              slidesToShow: 2,
              slidesToScroll: 3,
              infinite: true
          }
      },

      {
       breakpoint: 480,
       settings: {
         slidesToShow: 1,
         slidesToScroll: 1
     }
 }
                    // You can unslick at a given breakpoint now by adding:
                    // settings: "unslick"
                    // instead of a settings object
 ]

       });

    }
};





components.qa_box = {
    selector: '.qa-box',
    styles: './css/qa-box.css',
    script: './js/qa-box.js'
};




components.page_section = {
    selector: '#page-section',
    styles: ['./css/page.css','./css/table-responsive.css']
};



components.footer = {
    selector: 'footer',
    styles: './css/footer.css',
    script: './js/main.js',
    
    init: function init(nodes) {
        if ($('#back-to-top').length) {
            var scrollTrigger = 100, // px
            backToTop = function () {
                var scrollTop = $(window).scrollTop();
                if (scrollTop > scrollTrigger) {
                    $('#back-to-top').addClass('show');
                } else {
                    $('#back-to-top').removeClass('show');
                }
            };
            backToTop();
            $(window).on('scroll', function () {
                backToTop();
            });
            // $('#back-to-top').on('click', function (e) {
            //     e.preventDefault();
            //     $('html,body').animate({
            //         scrollTop: 0
            //     }, 2800);
            // });
        }
    }
};



components.zoomimg = {
    selector: '.zoomimg',
    styles: './css/chocolat.css',
    script: ['./js/jquery.min.js', './js/jquery.chocolat.js'],
    init: function init(nodes) {
        $(function () {
            $('.view-seventh1 a').Chocolat();
            $('.view-seventh2 a').Chocolat();
            $('.view-seventh3 a').Chocolat();
            $('.view-seventh4 a').Chocolat();
            $('.view-seventh5 a').Chocolat();
            $('.view-seventh6 a').Chocolat();
            $('.view-seventh7 a').Chocolat();
            $('.view-seventh8 a').Chocolat();
            $('.view-seventh9 a').Chocolat();
            $('.view-seventh10 a').Chocolat();
            $('.view-seventh11 a').Chocolat();
            $('.view-seventh12 a').Chocolat();
            $('.view-seventh13 a').Chocolat();
            $('.view-seventh14 a').Chocolat();
            $('.view-seventh15 a').Chocolat();
            $('.view-seventh16 a').Chocolat();
            $('.view-seventh17 a').Chocolat();
            $('.view-seventh18 a').Chocolat();
            $('.view-seventh19 a').Chocolat();
            $('.view-seventh20 a').Chocolat();
            $('.view-seventh21 a').Chocolat();
            $('.view-seventh22 a').Chocolat();
            $('.view-seventh23 a').Chocolat();
            $('.view-seventh24 a').Chocolat();
            $('.view-seventh25 a').Chocolat();
            $('.view-seventh26 a').Chocolat();
            $('.view-seventh27 a').Chocolat();
            $('.view-seventh28 a').Chocolat();
            $('.view-seventh29 a').Chocolat();
            $('.view-seventh30 a').Chocolat();
        });
    }
};






function parseJSON(str) {
    try {
        if (str) return JSON.parse(str);
        else return {}
    } catch (error) {
        console.warn(error);
        return {}
    }
}

function detectIE() {
    var ua = window.navigator.userAgent,
    msie = ua.indexOf('MSIE '),
    trident = ua.indexOf('Trident/'),
    edge = ua.indexOf('Edge/');
    if (msie > 0) {
        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10)
    }
    if (trident > 0) {
        var rv = ua.indexOf('rv:');
        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10)
    }
    if (edge > 0) {
        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10)
    }
    return false
}
window.addEventListener('load', function () {
    new ZemezCore({
        components: components,
        onError: function onError(error) {
            setTimeout(function () {
                if (detectIE() < 12) {
                    var script = document.createElement('script');
                    script.src = './components/base/support.js';
                    document.querySelector('head').appendChild(script)
                }
                throw new Error(error)
            }, 1000)
        }
    })
});